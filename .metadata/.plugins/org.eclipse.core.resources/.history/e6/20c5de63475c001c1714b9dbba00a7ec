package application.view.intermediate;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

public class RaportGenerator {

	public static List<TimeRaportEntry> generateTimeRaport(List<ScheduleIntermediate> schedules) {

		List<TimeRaportEntry> raport = new ArrayList<TimeRaportEntry>();

		float min;
		float max;
		float sum;

		Map<Date, List<ScheduleIntermediate>> groupSchedules = groupByDate(schedules);
		
		for (Entry<Date, List<ScheduleIntermediate>> entry : groupSchedules.entrySet()) {
		
		}

		return raport;
	}

	private static Map<Date, List<ScheduleIntermediate>> groupByDate(List<ScheduleIntermediate> schedules) {

		Map<Date, List<ScheduleIntermediate>> raport = new HashMap<Date, List<ScheduleIntermediate>>();

		DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

		for (ScheduleIntermediate schedule : schedules) {
			Date scheduledDate = null;

			try {
				scheduledDate = formatter.parse(formatter.format(schedule.getScheduled_date()));
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			if (scheduledDate != null) {
				if (raport.containsKey(scheduledDate)) {
					raport.get(scheduledDate).add(schedule);

				} else {
					List<ScheduleIntermediate> list = new ArrayList<ScheduleIntermediate>();
					list.add(schedule);
					raport.put(scheduledDate, list);
				}
			}
		}

		return raport;

	}

}
